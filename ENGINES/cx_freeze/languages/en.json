{
  "_meta": {"code": "en", "name": "English"},
  "cx_freeze_title": "cx_Freeze Options",
  "cx_output_dir_ph": "Output directory (--target-dir)",
  "tt_cx_output_dir": "Destination directory for built files (cx_Freeze --target-dir)",
  "browse": "Browseâ€¦",
  "target_name_title": "Target name",
  "cx_target_name_ph": "Executable name (--target-name)",
  "tt_cx_target_name": "Set output executable name (cx_Freeze --target-name)",
  "base_title": "Base",
  "tt_cx_base": "Base for target (Win32GUI to hide console on Windows)",
  "include_deps": "Include dependencies",
  "tt_cx_include_deps": "Include Python dependencies automatically (disable to reduce bundle)",
  "include_encodings": "Include encodings",
  "tt_cx_include_encodings": "Force include 'encodings' package (fixes Unicode issues)",
  "icon": "Icon",
  "tt_cx_icon": "Path to icon file (.ico on Windows, .icns on macOS)",
  "packages_title": "Packages to include",
  "tt_cx_packages": "Explicit Python packages to include",
  "add": "Add",
  "remove": "Remove",
  "modules_title": "Modules to include",
  "tt_cx_modules": "Explicit Python modules to include",
  "excludes_title": "Modules/packages to exclude",
  "tt_cx_excludes": "Exclude specific modules or packages",
  "data_title": "Data files/directories to include",
  "tt_cx_data": "Add files or directories to include; use 'src -> dst' to rename destination",
  "choose_data_file": "Choose a data file",
  "choose_data_dir": "Choose a data directory",
  "zip_include_title": "Zip include patterns",
  "tt_cx_zip_include": "Patterns to include in library.zip (comma-separated)",
  "zip_exclude_title": "Zip exclude patterns",
  "tt_cx_zip_exclude": "Patterns to exclude from library.zip (comma-separated)",
  "replace_paths_title": "Replace paths",
  "cx_replace_paths_ph": "pattern=>replacement, comma-separated",
  "tt_cx_replace_paths": "Rewrite source paths inside bytecode (cx_Freeze --replace-paths)",
  "constants_title": "Constants",
  "cx_constants_ph": "NAME=VALUE, comma-separated",
  "tt_cx_constants": "Define constants for the build (cx_Freeze --constants)",
  "optimize": "Optimize",
  "tt_cx_optimize": "Python optimization level (-O / -OO)"
}
