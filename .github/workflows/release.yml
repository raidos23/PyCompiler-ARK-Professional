name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    name: Build release artifacts (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install runtime requirements (if present)
        if: hashFiles('requirements.txt') != ''
        run: python -m pip install -r requirements.txt

      - name: Install build tooling
        run: python -m pip install build pip-licenses

      - name: Build distributions (sdist+wheel) if packaging configured
        if: >-
          hashFiles('pyproject.toml') != '' ||
          hashFiles('setup.cfg') != '' ||
          hashFiles('setup.py') != ''
        run: python -m build --sdist --wheel

      - name: Generate third-party licenses (if requirements)
        if: hashFiles('requirements.txt') != ''
        run: >-
          pip-licenses --format=plain-vertical --with-authors --with-urls --with-license-file
          --output-file THIRD_PARTY_LICENSES.txt || echo "no licenses"

      - name: Create checksums
        shell: bash
        run: |
          mkdir -p release
          if [ -d dist ]; then cp -r dist/* release/ || true; fi
          if [ -f THIRD_PARTY_LICENSES.txt ]; then cp THIRD_PARTY_LICENSES.txt release/; fi
          (cd release && for f in *; do [ -f "$f" ] && sha256sum "$f" >> SHA256SUMS.txt || true; done)

      - name: Upload OS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: release/*
          if-no-files-found: warn

  publish:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_assets

      - name: Generate combined checksums
        run: |
          cd release_assets
          find . -type f -maxdepth 2 -print0 | xargs -0 -I{} sha256sum "{}" > ALL_SHA256SUMS.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-beta') || contains(github.ref, '-alpha') }}
          files: |
            release_assets/**
            release_assets/ALL_SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Optional code signing or notarization steps can be added with conditional secrets, e.g.:
#  - Windows signtool (requires secrets and cert in the runner or Azure Key Vault)
#  - macOS codesign/notarytool (requires Apple ID credentials as secrets)
#  Use separate jobs with `if: runner.os == 'Windows'` or 'macOS' and guard on secrets presence.
